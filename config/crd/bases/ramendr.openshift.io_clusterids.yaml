
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: clusterids.ramendr.openshift.io
spec:
  group: ramendr.openshift.io
  names:
    kind: ClusterID
    listKind: ClusterIDList
    plural: clusterids
    singular: clusterid
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterID is the Schema for the clusterids API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterIDSpec defines the desired state of ClusterID
            properties:
              location:
                description: 'Location of this cluster: one of Self (local) or MetroRemote
                  or WANRemote'
                type: string
              name:
                description: Name of this cluster.  Each cluster in a given ClusterPeers
                  should have a unique name.
                type: string
            required:
            - location
            - name
            type: object
          status:
            description: ClusterIDStatus defines the observed state of ClusterID
            properties:
              fenceStatus:
                description: 'Fence status: fenced or unfenced'
                type: string
            required:
            - fenceStatus
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
